{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqAddOrUpdateShopCart, reqGoodInfo } from \"@/api\";\nconst state = {\n  getGoodInfo: {}\n};\nconst mutations = {\n  GETGOODINFO(state, getGoodInfo) {\n    state.getGoodInfo = getGoodInfo;\n  }\n\n};\nconst actions = {\n  async getGoodInfo({\n    commit\n  }, skuid) {\n    let result = await reqGoodInfo(skuid);\n\n    if (result.code == 200) {\n      commit(\"GETGOODINFO\", result.data);\n    }\n  },\n\n  async addOrUpdateShopCart({\n    commit\n  }, {\n    skuid,\n    skuNum\n  }) {\n    let result = await reqAddOrUpdateShopCart(skuid, skuNum);\n\n    if (result.code == 200) {\n      return \"Ok\";\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  }\n\n};\nconst getters = {\n  categoryView(state) {\n    return state.getGoodInfo.categoryView || {};\n  },\n\n  skuInfo(state) {\n    return state.getGoodInfo.skuInfo || {};\n  },\n\n  spuSaleAttrList(state) {\n    return state.getGoodInfo.spuSaleAttrList || [];\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqAddOrUpdateShopCart","reqGoodInfo","state","getGoodInfo","mutations","GETGOODINFO","actions","commit","skuid","result","code","data","addOrUpdateShopCart","skuNum","Promise","reject","Error","getters","categoryView","skuInfo","spuSaleAttrList"],"sources":["D:/Users/Rondo Lin/Desktop/sph_app/src/store/detail/index.js"],"sourcesContent":["import { reqAddOrUpdateShopCart, reqGoodInfo } from \"@/api\"\r\n\r\n\r\n\r\nconst state = {\r\n    getGoodInfo:{}\r\n}\r\n\r\nconst mutations = {\r\n    GETGOODINFO(state,getGoodInfo){\r\n        state.getGoodInfo = getGoodInfo\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    async getGoodInfo({commit},skuid){\r\n        let result = await reqGoodInfo(skuid)\r\n            if(result.code==200){\r\n                commit(\"GETGOODINFO\",result.data)\r\n            }\r\n    },\r\n    async addOrUpdateShopCart({commit},{skuid,skuNum}){\r\n        let result = await reqAddOrUpdateShopCart(skuid,skuNum)\r\n            if(result.code==200){\r\n                return \"Ok\"\r\n            }else{\r\n                return Promise.reject(new Error('fail'))\r\n            }\r\n    },\r\n\r\n}\r\nconst getters = {\r\n    categoryView(state){\r\n        return state.getGoodInfo.categoryView || {}\r\n    },\r\n    skuInfo(state){\r\n        return state.getGoodInfo.skuInfo || {}\r\n    },\r\n    spuSaleAttrList(state){\r\n        return state.getGoodInfo.spuSaleAttrList || []\r\n    }\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";AAAA,SAASA,sBAAT,EAAiCC,WAAjC,QAAoD,OAApD;AAIA,MAAMC,KAAK,GAAG;EACVC,WAAW,EAAC;AADF,CAAd;AAIA,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAD,EAAOC,WAAP,EAAmB;IAC1BD,KAAK,CAACC,WAAN,GAAoBA,WAApB;EACH;;AAHa,CAAlB;AAMA,MAAMG,OAAO,GAAG;EACZ,MAAMH,WAAN,CAAkB;IAACI;EAAD,CAAlB,EAA2BC,KAA3B,EAAiC;IAC7B,IAAIC,MAAM,GAAG,MAAMR,WAAW,CAACO,KAAD,CAA9B;;IACI,IAAGC,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChBH,MAAM,CAAC,aAAD,EAAeE,MAAM,CAACE,IAAtB,CAAN;IACH;EACR,CANW;;EAOZ,MAAMC,mBAAN,CAA0B;IAACL;EAAD,CAA1B,EAAmC;IAACC,KAAD;IAAOK;EAAP,CAAnC,EAAkD;IAC9C,IAAIJ,MAAM,GAAG,MAAMT,sBAAsB,CAACQ,KAAD,EAAOK,MAAP,CAAzC;;IACI,IAAGJ,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACR;;AAdW,CAAhB;AAiBA,MAAMC,OAAO,GAAG;EACZC,YAAY,CAAChB,KAAD,EAAO;IACf,OAAOA,KAAK,CAACC,WAAN,CAAkBe,YAAlB,IAAkC,EAAzC;EACH,CAHW;;EAIZC,OAAO,CAACjB,KAAD,EAAO;IACV,OAAOA,KAAK,CAACC,WAAN,CAAkBgB,OAAlB,IAA6B,EAApC;EACH,CANW;;EAOZC,eAAe,CAAClB,KAAD,EAAO;IAClB,OAAOA,KAAK,CAACC,WAAN,CAAkBiB,eAAlB,IAAqC,EAA5C;EACH;;AATW,CAAhB;AAYA,eAAe;EACXlB,KADW;EAEXE,SAFW;EAGXE,OAHW;EAIXW;AAJW,CAAf"},"metadata":{},"sourceType":"module"}