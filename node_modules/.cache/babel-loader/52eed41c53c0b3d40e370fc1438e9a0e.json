{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\nimport { setToken } from \"@/utils/token\";\nimport { getToken } from \"@/utils/token\";\nconst state = {\n  getCode: '',\n  token: getToken(),\n  userInfo: {}\n};\nconst mutations = {\n  GETCODE(state, getCode) {\n    state.getCode = getCode;\n  },\n\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n\n  USERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  }\n\n};\nconst actions = {\n  async getCode({\n    commit\n  }, phone) {\n    let result = await reqGetCode(phone);\n\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data);\n\n    if (result.code == 200) {\n      commit('USERLOGIN', result.data.token);\n      setToken(result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n\n    if (result.code == 200) {\n      commit('USERINFO', result.data);\n      return 'ok';\n    } else {}\n  },\n\n  async userLogout({\n    commit\n  }) {\n    let result = await req;\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetCode","reqUserInfo","reqUserLogin","reqUserRegister","setToken","getToken","state","getCode","token","userInfo","mutations","GETCODE","USERLOGIN","USERINFO","actions","commit","phone","result","code","data","Promise","reject","Error","userRegister","user","userLogin","userLogout","req","getters"],"sources":["D:/Users/Rondo Lin/Desktop/sph_app/src/store/user/index.js"],"sourcesContent":["import { reqGetCode, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\r\nimport { setToken } from \"@/utils/token\";\r\nimport { getToken } from \"@/utils/token\";\r\n\r\nconst state = {\r\n    getCode:'',\r\n    token:getToken(),\r\n    userInfo:{}\r\n}\r\n\r\n\r\nconst mutations = {\r\n    GETCODE(state,getCode){\r\n        state.getCode = getCode\r\n    },\r\n    USERLOGIN(state,token){\r\n        state.token = token\r\n    },\r\n    USERINFO(state,userInfo){\r\n        state.userInfo = userInfo\r\n    }\r\n}\r\n\r\n\r\nconst actions = {\r\n    async getCode({ commit }, phone) {\r\n        let result = await reqGetCode(phone)\r\n        if(result.code==200){\r\n            commit('GETCODE',result.data)\r\n        \r\n        }else {\r\n            return Promise.reject(new Error('fail'))\r\n        }\r\n    },\r\n    async userRegister({commit},user){\r\n        let result = await reqUserRegister(user)\r\n        if(result.code==200){\r\n            return 'ok'\r\n        }else {\r\n            return Promise.reject(new Error('fail'))\r\n        }\r\n    },\r\n    async userLogin({commit},data){\r\n        let result = await reqUserLogin(data)\r\n        if(result.code==200){\r\n           commit('USERLOGIN',result.data.token)\r\n          setToken(result.data.token)\r\n           return 'ok'\r\n        }else {\r\n            return Promise.reject(new Error('fail'))\r\n        }\r\n    },\r\n    async userInfo({commit}){\r\n        let result = await reqUserInfo()\r\n        if(result.code==200){\r\n            commit('USERINFO',result.data)\r\n            return 'ok'\r\n        }else {\r\n           \r\n        }\r\n    },\r\n    async userLogout({commit}){\r\n        let result = await req\r\n    }\r\n}\r\n\r\n\r\n\r\nconst getters = {}\r\n\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,YAAlC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,MAAMC,KAAK,GAAG;EACVC,OAAO,EAAC,EADE;EAEVC,KAAK,EAACH,QAAQ,EAFJ;EAGVI,QAAQ,EAAC;AAHC,CAAd;AAOA,MAAMC,SAAS,GAAG;EACdC,OAAO,CAACL,KAAD,EAAOC,OAAP,EAAe;IAClBD,KAAK,CAACC,OAAN,GAAgBA,OAAhB;EACH,CAHa;;EAIdK,SAAS,CAACN,KAAD,EAAOE,KAAP,EAAa;IAClBF,KAAK,CAACE,KAAN,GAAcA,KAAd;EACH,CANa;;EAOdK,QAAQ,CAACP,KAAD,EAAOG,QAAP,EAAgB;IACpBH,KAAK,CAACG,QAAN,GAAiBA,QAAjB;EACH;;AATa,CAAlB;AAaA,MAAMK,OAAO,GAAG;EACZ,MAAMP,OAAN,CAAc;IAAEQ;EAAF,CAAd,EAA0BC,KAA1B,EAAiC;IAC7B,IAAIC,MAAM,GAAG,MAAMjB,UAAU,CAACgB,KAAD,CAA7B;;IACA,IAAGC,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChBH,MAAM,CAAC,SAAD,EAAWE,MAAM,CAACE,IAAlB,CAAN;IAEH,CAHD,MAGM;MACF,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACJ,CATW;;EAUZ,MAAMC,YAAN,CAAmB;IAACR;EAAD,CAAnB,EAA4BS,IAA5B,EAAiC;IAC7B,IAAIP,MAAM,GAAG,MAAMd,eAAe,CAACqB,IAAD,CAAlC;;IACA,IAAGP,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAEM;MACF,OAAOE,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACJ,CAjBW;;EAkBZ,MAAMG,SAAN,CAAgB;IAACV;EAAD,CAAhB,EAAyBI,IAAzB,EAA8B;IAC1B,IAAIF,MAAM,GAAG,MAAMf,YAAY,CAACiB,IAAD,CAA/B;;IACA,IAAGF,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MACjBH,MAAM,CAAC,WAAD,EAAaE,MAAM,CAACE,IAAP,CAAYX,KAAzB,CAAN;MACDJ,QAAQ,CAACa,MAAM,CAACE,IAAP,CAAYX,KAAb,CAAR;MACC,OAAO,IAAP;IACF,CAJD,MAIM;MACF,OAAOY,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACJ,CA3BW;;EA4BZ,MAAMb,QAAN,CAAe;IAACM;EAAD,CAAf,EAAwB;IACpB,IAAIE,MAAM,GAAG,MAAMhB,WAAW,EAA9B;;IACA,IAAGgB,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChBH,MAAM,CAAC,UAAD,EAAYE,MAAM,CAACE,IAAnB,CAAN;MACA,OAAO,IAAP;IACH,CAHD,MAGM,CAEL;EACJ,CApCW;;EAqCZ,MAAMO,UAAN,CAAiB;IAACX;EAAD,CAAjB,EAA0B;IACtB,IAAIE,MAAM,GAAG,MAAMU,GAAnB;EACH;;AAvCW,CAAhB;AA4CA,MAAMC,OAAO,GAAG,EAAhB;AAGA,eAAe;EACXtB,KADW;EAEXI,SAFW;EAGXI,OAHW;EAIXc;AAJW,CAAf"},"metadata":{},"sourceType":"module"}