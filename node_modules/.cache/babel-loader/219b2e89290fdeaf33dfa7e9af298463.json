{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedByid } from \"@/api\";\nconst state = {\n  getCartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, getCartList) {\n    state.getCartList = getCartList;\n  }\n\n};\nconst actions = {\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit('GETCARTLIST', result.data);\n    }\n  },\n\n  async deleteCartListBySkuId({\n    commit\n  }, skuid) {\n    let result = await reqDeleteCartById(skuid);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async update({\n    commit\n  }, skuid) {\n    let result = await reqUpdateCheckedByid(skuid);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  }\n\n};\nconst getters = {\n  getCartList(state) {\n    return state.getCartList || [];\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeleteCartById","reqUpdateCheckedByid","state","getCartList","mutations","GETCARTLIST","actions","commit","result","code","data","deleteCartListBySkuId","skuid","Promise","reject","Error","update","getters"],"sources":["D:/Users/Rondo Lin/Desktop/sph_app/src/store/shopcart/index.js"],"sourcesContent":["\r\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedByid } from \"@/api\"\r\n\r\n\r\nconst state = {\r\n    getCartList:[]\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state,getCartList){\r\n        state.getCartList = getCartList\r\n    }\r\n    \r\n}\r\nconst actions = {\r\n    async getCartList({commit}){\r\n        let result = await reqCartList()\r\n        if(result.code == 200){\r\n            commit('GETCARTLIST',result.data)\r\n        }\r\n    },\r\n    async deleteCartListBySkuId({commit},skuid){\r\n        let result = await reqDeleteCartById(skuid)\r\n        if(result.code==200){\r\n            return 'ok'\r\n        }else{\r\n            return Promise.reject(new Error('fail'))\r\n        }\r\n    },\r\n    async update({commit},skuid){\r\n        let result = await reqUpdateCheckedByid(skuid)\r\n        if(result.code==200){\r\n            return 'ok'\r\n        }else{\r\n            return Promise.reject(new Error('fail'))\r\n        }\r\n    }\r\n}\r\nconst getters = {\r\n    getCartList(state){\r\n        return state.getCartList || []\r\n    },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";AACA,SAASA,WAAT,EAAsBC,iBAAtB,EAAyCC,oBAAzC,QAAqE,OAArE;AAGA,MAAMC,KAAK,GAAG;EACVC,WAAW,EAAC;AADF,CAAd;AAGA,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAD,EAAOC,WAAP,EAAmB;IAC1BD,KAAK,CAACC,WAAN,GAAoBA,WAApB;EACH;;AAHa,CAAlB;AAMA,MAAMG,OAAO,GAAG;EACZ,MAAMH,WAAN,CAAkB;IAACI;EAAD,CAAlB,EAA2B;IACvB,IAAIC,MAAM,GAAG,MAAMT,WAAW,EAA9B;;IACA,IAAGS,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;MAClBF,MAAM,CAAC,aAAD,EAAeC,MAAM,CAACE,IAAtB,CAAN;IACH;EACJ,CANW;;EAOZ,MAAMC,qBAAN,CAA4B;IAACJ;EAAD,CAA5B,EAAqCK,KAArC,EAA2C;IACvC,IAAIJ,MAAM,GAAG,MAAMR,iBAAiB,CAACY,KAAD,CAApC;;IACA,IAAGJ,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACJ,CAdW;;EAeZ,MAAMC,MAAN,CAAa;IAACT;EAAD,CAAb,EAAsBK,KAAtB,EAA4B;IACxB,IAAIJ,MAAM,GAAG,MAAMP,oBAAoB,CAACW,KAAD,CAAvC;;IACA,IAAGJ,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;IACH;EACJ;;AAtBW,CAAhB;AAwBA,MAAME,OAAO,GAAG;EACZd,WAAW,CAACD,KAAD,EAAO;IACd,OAAOA,KAAK,CAACC,WAAN,IAAqB,EAA5B;EACH;;AAHW,CAAhB;AAMA,eAAe;EACXD,KADW;EAEXE,SAFW;EAGXE,OAHW;EAIXW;AAJW,CAAf"},"metadata":{},"sourceType":"module"}