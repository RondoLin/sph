{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqLogout, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nconst state = {\n  getCode: '',\n  token: getToken(),\n  userInfo: {}\n};\nconst mutations = {\n  GETCODE(state, getCode) {\n    state.getCode = getCode;\n  },\n\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n\n  USERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n\n  CLEAR(state) {\n    state.token = '';\n    state.userInfo = {};\n    removeToken();\n  }\n\n};\nconst actions = {\n  async getCode({\n    commit\n  }, phone) {\n    let result = await reqGetCode(phone);\n\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data);\n\n    if (result.code == 200) {\n      commit('USERLOGIN', result.data.token);\n      setToken(result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('fail'));\n    }\n  },\n\n  async userInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n\n    if (result.code == 200) {\n      commit('USERINFO', result.data);\n      return 'ok';\n    } else {}\n  },\n\n  async userLogout({\n    commit\n  }) {\n    let result = await reqLogout();\n\n    if (result.code == 200) {\n      commit('CLEAR');\n    }\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}